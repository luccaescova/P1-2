import { Entity, PrimaryGeneratedColumn, Column, ManyToOne, BaseEntity } from "typeorm";
import { User } from "../models/User"; // Ajuste o caminho conforme necessÃ¡rio

@Entity()
export class WalletTransaction extends BaseEntity {
    @PrimaryGeneratedColumn()
    id: number;

    @ManyToOne(() => User, (user: { id: any; }) => user.id)
    user: User;

    @Column("decimal", { precision: 10, scale: 2 })
    amount: number;

    @Column({ length: 20 })
    type: "deposit" | "withdraw";

    @Column({ nullable: true })
    details: string;

    @Column({ type: "timestamp", default: () => "CURRENT_TIMESTAMP" })
    timestamp: Date;
}
/*import { runSQL } from "../utils/runSql";

const WalletTransaction = async () => {
    const sql = `
        CREATE TABLE WalletTransactions (
            id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
            user_id NUMBER NOT NULL,
            amount NUMBER(10, 2) NOT NULL,
            type VARCHAR2(20) NOT NULL CHECK (type IN ('deposit', 'withdraw')),
            details VARCHAR2(255),
            timestamp DATE DEFAULT CURRENT_TIMESTAMP NOT NULL,
            FOREIGN KEY (user_id) REFERENCES Users(id) ON DELETE CASCADE
        )
    `;

    await runSQL(sql);
};


export {WalletTransaction} ;*/